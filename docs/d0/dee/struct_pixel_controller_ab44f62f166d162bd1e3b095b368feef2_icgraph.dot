digraph "PixelController::advanceData"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="PixelController::advanceData",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Advance the data pointer forward, adjust position counter."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="PixelController::advance\lAndLoadAndScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a6c5dff0bd5be54ed5cdc8edb05d3ee2d",tooltip="A version of loadAndScale() that advances the output data pointer."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="PixelController::advance\lAndLoadAndScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#aa6a77bc5cd442a95a4f36b3c39d09f6e",tooltip="non-template alias of advanceAndLoadAndScale<0>()"];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="PixelController::advance\lAndLoadAndScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a9b3aad7f0649ea0d87e2ac243a6ede89",tooltip="non-template alias of advanceAndLoadAndScale<0>()"];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="PixelController::advance\lAndLoadAndScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a5ed1cdb992788946f8aa585e014491fa",tooltip="non-template alias of advanceAndLoadAndScale<0>()"];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="PixelController::stepAdvance\lAndLoadAndScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a0b169100513e0e2fe996401a8f653688",tooltip="stepDithering() and advanceAndLoadAndScale0()"];
  Node2 -> Node7 [id="edge6_Node000002_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="PixelController::stepAdvance\lAndLoadAndScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a1fd9d16856c759d9fe45025464eae1de",tooltip="stepDithering() and advanceAndLoadAndScale0()"];
  Node2 -> Node8 [id="edge7_Node000002_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="PixelController::stepAdvance\lAndLoadAndScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#acb4a76e70b987649e50290f68648e9d6",tooltip="stepDithering() and advanceAndLoadAndScale0()"];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="PixelController::advance\lAndLoadAndScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#aebc10b48403a00eb03bdb9e07e09f183",tooltip="A version of loadAndScale() that advances the output data pointer."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="PixelController::advance\lAndLoadAndScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a7b2c3f0de852388e61d6b788d24f1ede",tooltip="A version of loadAndScale() that advances the output data pointer without dithering."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="DMXSerialController\l::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d6f/group___clockless_chipsets.html#a861d9beed51cce6441b50398f1eabebf",tooltip="Send the LED data to the strip."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="DMXSimpleController\l::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d6f/group___clockless_chipsets.html#a6744d598f10ba5d97a57df08c46bafab",tooltip="Send the LED data to the strip."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="LPD6803Controller::\lshowPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d0d/group___clocked_chipsets.html#a35f42384ada050146e6813f0fc766356",tooltip="Send the LED data to the strip."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="P9813Controller::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d0d/group___clocked_chipsets.html#ab7381f0a1850d006f3449d27838b19c5",tooltip="Send the LED data to the strip."];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="RGBWEmulatedController\l::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d28/group___chipsets.html#aba9a2f023f2950dbcdf3c2482f765350",tooltip="Send the LED data to the strip."];
  Node1 -> Node16 [id="edge15_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="WS2816Controller::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d28/group___chipsets.html#a7d9891631bb3b4e35dcbb93180ac8a55",tooltip="Send the LED data to the strip."];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="APA102Controller::showPixels\lDefault",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d0d/group___clocked_chipsets.html#a632117bec47c6b4ba7e3ed1703478a42",tooltip=" "];
  Node17 -> Node18 [id="edge17_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="APA102Controller::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d0d/group___clocked_chipsets.html#a523f76b88c07e29cba6c40bd0cefe4b3",tooltip="Send the LED data to the strip."];
  Node1 -> Node19 [id="edge18_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="APA102Controller::showPixels\lGammaBitShift",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d0d/group___clocked_chipsets.html#a040f761b3d3bb30a9275f96548ec5ef7",tooltip=" "];
  Node19 -> Node18 [id="edge19_Node000019_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge20_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="AVRSoftwareSPIOutput\l::writePixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d57/class_a_v_r_software_s_p_i_output.html#a20772a8fdfa75015731375c36ccb3515",tooltip="Write LED pixel data to the SPI interface."];
  Node1 -> Node21 [id="edge21_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="REFHardwareSPIOutput\l::writePixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dd4/class_r_e_f_hardware_s_p_i_output.html#a17c12dc926c86fc42b2f857149c699a1",tooltip="write a block of uint8_ts out in groups of three."];
}
