digraph "Fast Math Functions"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir=LR;
  Node13 [id="Node000013",label="Waveform Beat Generators",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d6c/group___beat_generators.html",tooltip="Waveform generators that reset at a given number of \"beats per minute\" (BPM)."];
  Node3 [id="Node000003",label="Dimming and Brightening\l Functions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d3e/group___dimming.html",tooltip="Functions to dim or brighten data."];
  Node4 [id="Node000004",label="Easing Functions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/dfe/group___easing.html",tooltip="Specify the rate of change of a parameter over time."];
  Node5 [id="Node000005",label="Fast Memory Functions\l for AVR",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/de6/group___fast_memory.html",tooltip="Alternatives to memmove, memcpy, and memset that are faster on AVR than standard avr-libc 1...."];
  Node9 [id="Node000009",label="Float-to-Fixed and\l Fixed-to-Float Conversions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d66/group___float_conversions.html",tooltip="Functions to convert between floating point and fixed point types."];
  Node8 [id="Node000008",label="Fixed-Point Fractional\l Types.",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d58/group___fractional_types.html",tooltip="Types for storing fractional data."];
  Node11 [id="Node000011",label="Linear Interpolation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d19/group___linear_interpolation.html",tooltip="Fast linear interpolation functions, such as could be used for Perlin noise, etc."];
  Node2 [id="Node000002",label="Basic Math Operations",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d98/group___math.html",tooltip="Fast, efficient 8-bit math functions specifically designed for high-performance LED programming."];
  Node6 [id="Node000006",label="Fast Random Number\l Generators",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d0d/group___random.html",tooltip="Fast 8-bit and 16-bit unsigned random number generators."];
  Node12 [id="Node000012",label="Scaling Functions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da8/group___scaling.html",tooltip="Fast, efficient 8-bit scaling functions specifically designed for high-performance LED programming."];
  Node7 [id="Node000007",label="Fast Trigonometry Functions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/ddc/group___trig.html",tooltip="Fast 8-bit and 16-bit approximations of sin(x) and cos(x)."];
  Node14 [id="Node000014",label="Waveform Generators",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d7a/group___waveform_generators.html",tooltip="General purpose wave generator functions."];
  Node10 [id="Node000010",label="Integer Mapping Functions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d12/group__intmap.html",tooltip="Maps a scalar from one integer size to another."];
  Node1 [id="Node000001",label="Fast Math Functions",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Fast, efficient 8-bit math functions specifically designed for high-performance LED programming."];
  Node1->Node2 [shape=plaintext, dir="back", style="solid"];
  Node1->Node3 [shape=plaintext, dir="back", style="solid"];
  Node1->Node4 [shape=plaintext, dir="back", style="solid"];
  Node1->Node5 [shape=plaintext, dir="back", style="solid"];
  Node1->Node6 [shape=plaintext, dir="back", style="solid"];
  Node1->Node7 [shape=plaintext, dir="back", style="solid"];
  Node1->Node8 [shape=plaintext, dir="back", style="solid"];
  Node1->Node9 [shape=plaintext, dir="back", style="solid"];
  Node1->Node10 [shape=plaintext, dir="back", style="solid"];
  Node1->Node11 [shape=plaintext, dir="back", style="solid"];
  Node1->Node12 [shape=plaintext, dir="back", style="solid"];
  Node1->Node13 [shape=plaintext, dir="back", style="solid"];
  Node1->Node14 [shape=plaintext, dir="back", style="solid"];
}
