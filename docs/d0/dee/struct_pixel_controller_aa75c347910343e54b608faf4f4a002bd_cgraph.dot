digraph "PixelController::loadAndScaleRGBW"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="PixelController::loadAnd\lScaleRGBW",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="PixelController::loadAnd\lScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a4afe8b8ec93c89308fe185b1eb164ff6",tooltip="non-template alias of loadAndScale<0>()"];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="PixelController::loadAnd\lScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a56fc5e5bf305e1760198c0a69ac85ff9",tooltip="Loads, dithers, and scales a single byte for a given output slot, using class dither and scale values..."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="PixelController::dither",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/dee/struct_pixel_controller.html#aa2a1b38058a62a4337605425e482202f",tooltip="Calculate a dither value using the per-channel dither data."];
  Node3 -> Node6 [id="edge4_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="PixelController::loadByte",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a75ef76fbecdc9b39b01eeab216845d9d",tooltip="Read a byte of LED data."];
  Node1 -> Node7 [id="edge5_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="PixelController::loadAnd\lScale1",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#ae570967d1b674970cf472feb379f248f",tooltip="non-template alias of loadAndScale<1>()"];
  Node7 -> Node3 [id="edge6_Node000007_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="PixelController::loadAnd\lScale2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#af5a5f12205a4187aa4df499b8224ed35",tooltip="non-template alias of loadAndScale<2>()"];
  Node8 -> Node3 [id="edge8_Node000008_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="rgb_2_rgbw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/dbb/rgbw_8h.html#ae9cf94c7bddcd484c4f03b0c69b7770a",tooltip="Converts RGB to RGBW using one of the functions."];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="rgb_2_rgbw_exact",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d8d/rgbw_8cpp.html#ac22f7204d0501031d2431e7b2f67c25c",tooltip="Converts RGB to RGBW using a color transfer method from saturated color channels to white."];
  Node10 -> Node11 [id="edge11_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="anonymous_namespace\l\{rgbw::cpp\}::min3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d9e/namespaceanonymous__namespace_02rgbw_8cpp_03.html#a81ced55db6e7d50e84ce729e6bf3223d",tooltip=" "];
  Node10 -> Node12 [id="edge12_Node000010_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="scale8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da8/group___scaling.html#gad7535ccda9c92470c4e6ee0265585555",tooltip="Scale one byte by a second one, which is treated as the numerator of a fraction whose denominator is ..."];
  Node9 -> Node13 [id="edge13_Node000009_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="rgb_2_rgbw_max_brightness",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d8d/rgbw_8cpp.html#a07e94168baddf333cdc5673f28285aa9",tooltip="The minimum brigthness of the RGB channels is used to set the W channel."];
  Node13 -> Node11 [id="edge14_Node000013_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node12 [id="edge15_Node000013_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node14 [id="edge16_Node000009_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="rgb_2_rgbw_null_white\l_pixel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d8d/rgbw_8cpp.html#a026bfd212bc23d24cf2e8cc5a9ab5b9e",tooltip="Converts RGB to RGBW with the W channel set to black, always."];
  Node14 -> Node12 [id="edge17_Node000014_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node15 [id="edge18_Node000009_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="rgb_2_rgbw_user_function",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d8d/rgbw_8cpp.html#a03a50e79b032a49c951919b9570d18f5",tooltip=" "];
  Node9 -> Node16 [id="edge19_Node000009_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="rgb_2_rgbw_white_boosted",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d8d/rgbw_8cpp.html#aa6e2b44325da0172a48b20940b6e5fdf",tooltip="Converts RGB to RGBW with a boosted white channel."];
  Node16 -> Node17 [id="edge20_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="anonymous_namespace\l\{rgbw::cpp\}::divide_by_3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d9e/namespaceanonymous__namespace_02rgbw_8cpp_03.html#aa548790ff732b63dd9564ca586f07015",tooltip=" "];
  Node16 -> Node11 [id="edge21_Node000016_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node12 [id="edge22_Node000016_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node18 [id="edge23_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="rgbw_partial_reorder",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/d8d/rgbw_8cpp.html#a8ccb0b40cfa42bb4e4e259c5443e9472",tooltip=" "];
}
