digraph "qadd8"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="qadd8",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Add one byte to another, saturating at 0xFF."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CRGB::addToRGB",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d87/group___pixel_types.html#a971eb811b79c5748d02a0abc2162a223",tooltip="Add a constant to each channel, saturating at 0xFF."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CRGB::operator++",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d87/group___pixel_types.html#a42317847cecd51d3f70d8ca3e2f151c9",tooltip="Add a constant of '1' from each channel, saturating at 0xFF."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="PixelController::dither",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a9f94a8f75b316b2a289283b3ee53ad5d",tooltip="Calculate a dither value."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="PixelController::dither",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#aa2a1b38058a62a4337605425e482202f",tooltip="Calculate a dither value using the per-channel dither data."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="PixelController::PixelController",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a68e0ae41357f1dda75a5724cde6aa991",tooltip="Constructor."];
  Node5 -> Node7 [id="edge6_Node000005_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="PixelController::PixelController",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#ac272cca24b476c78cddd257cd9406150",tooltip="Constructor."];
  Node5 -> Node8 [id="edge7_Node000005_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="PixelController::PixelController",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#ae1e1069b343fc0577828d28ffe3cead9",tooltip="Constructor."];
  Node5 -> Node9 [id="edge8_Node000005_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="PixelController::enable\l_dithering",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#aa86847022436988b28343a76bab0db4c",tooltip="Toggle dithering enable If dithering is set to enabled, this will re-init the dithering values (init_..."];
  Node9 -> Node6 [id="edge9_Node000009_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node7 [id="edge10_Node000009_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node8 [id="edge11_Node000009_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node10 [id="edge12_Node000005_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="PixelController::loadAnd\lScale",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/dee/struct_pixel_controller.html#a56fc5e5bf305e1760198c0a69ac85ff9",tooltip="Loads, dithers, and scales a single byte for a given output slot, using class dither and scale values..."];
  Node10 -> Node11 [id="edge13_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="PixelController::advance\lAndLoadAndScale",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/dee/struct_pixel_controller.html#a6c5dff0bd5be54ed5cdc8edb05d3ee2d",tooltip="A version of loadAndScale() that advances the output data pointer."];
  Node10 -> Node18 [id="edge14_Node000010_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="PixelController::advance\lAndLoadAndScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#aebc10b48403a00eb03bdb9e07e09f183",tooltip="A version of loadAndScale() that advances the output data pointer."];
  Node10 -> Node19 [id="edge15_Node000010_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="PixelController::advance\lAndLoadAndScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a7b2c3f0de852388e61d6b788d24f1ede",tooltip="A version of loadAndScale() that advances the output data pointer without dithering."];
  Node10 -> Node20 [id="edge16_Node000010_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="PixelController::loadAnd\lScale0",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/dee/struct_pixel_controller.html#a4afe8b8ec93c89308fe185b1eb164ff6",tooltip="non-template alias of loadAndScale<0>()"];
  Node10 -> Node27 [id="edge17_Node000010_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="PixelController::loadAnd\lScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a007d808b1aa8a8ea456ace5b9a8d7d69",tooltip="non-template alias of loadAndScale<0>()"];
  Node10 -> Node28 [id="edge18_Node000010_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="PixelController::loadAnd\lScale0",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/dee/struct_pixel_controller.html#a4984f158bbc3b6c79ca16dd847fe67e1",tooltip="non-template alias of loadAndScale<0>()"];
  Node10 -> Node35 [id="edge19_Node000010_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="PixelController::loadAnd\lScale1",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/dee/struct_pixel_controller.html#ae570967d1b674970cf472feb379f248f",tooltip="non-template alias of loadAndScale<1>()"];
  Node10 -> Node36 [id="edge20_Node000010_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="PixelController::loadAnd\lScale1",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a2cd4db2b559aa2f61b61bccfbe8a978b",tooltip="non-template alias of loadAndScale<1>()"];
  Node10 -> Node37 [id="edge21_Node000010_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="PixelController::loadAnd\lScale1",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/dee/struct_pixel_controller.html#a11f9b50f738c6d57d08d6776b3d8eb43",tooltip="non-template alias of loadAndScale<1>()"];
  Node10 -> Node38 [id="edge22_Node000010_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="PixelController::loadAnd\lScale2",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/dee/struct_pixel_controller.html#af5a5f12205a4187aa4df499b8224ed35",tooltip="non-template alias of loadAndScale<2>()"];
  Node10 -> Node39 [id="edge23_Node000010_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="PixelController::loadAnd\lScale2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a4688b73eef22022b80df81e4f6c22b49",tooltip="non-template alias of loadAndScale<2>()"];
  Node5 -> Node41 [id="edge24_Node000005_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="PixelController::loadAnd\lScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a73553caa10abdb91e454a27456fc14e5",tooltip="Loads, dithers, and scales a single byte for a given output slot and lane, using class dither and sca..."];
  Node5 -> Node42 [id="edge25_Node000005_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="PixelController::loadAnd\lScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller.html#a7f2b0c051d473813018715f1621ea259",tooltip="Loads, dithers, and scales a single byte for a given output slot and lane."];
  Node1 -> Node43 [id="edge26_Node000001_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="fl::Fire2012::draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d9b/classfl_1_1_fire2012.html#a39d20a6dc4f3a771b8b12696db9c4a15",tooltip=" "];
  Node1 -> Node44 [id="edge27_Node000001_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="fill_raw_2dnoise16into8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/da4/group___noise_fill.html#ga20a2ff725bc56666c206d54deb372586",tooltip="Fill a 2D 8-bit buffer with noise, using inoise16()"];
  Node44 -> Node45 [id="edge28_Node000044_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="fill_2dnoise16",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$de/da4/group___noise_fill.html#ga714a0f305e385a60d81a40d1f98b53fc",tooltip="Fill an LED matrix with random colors, using 16-bit noise."];
  Node44 -> Node44 [id="edge29_Node000044_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node47 [id="edge30_Node000044_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="fill_raw_2dnoise16into8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/de8/noise_8cpp.html#a46bde35765a7eddbd1049fe49429e94e",tooltip=" "];
  Node1 -> Node48 [id="edge31_Node000001_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="fill_raw_noise8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/da4/group___noise_fill.html#ga1e4dba9289b03333697e70d4b7f3b006",tooltip="Fill a 1D 8-bit buffer with noise, using inoise8()"];
  Node48 -> Node49 [id="edge32_Node000048_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="fill_noise16",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/da4/group___noise_fill.html#ga8bf5ab0f87a6bb79204754ef2a62f960",tooltip="Fill an LED array with random colors, using 16-bit noise."];
  Node48 -> Node50 [id="edge33_Node000048_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="fill_noise8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/da4/group___noise_fill.html#ga7967fd7b1a7230a0f7428347c70dac3e",tooltip="Fill an LED array with random colors, using 8-bit noise."];
  Node1 -> Node51 [id="edge34_Node000001_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="fillnoise8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dda/_noise_plus_palette_8ino.html#a695b396822bbfb2d9b29c121cf13e8f3",tooltip=" "];
  Node1 -> Node52 [id="edge35_Node000001_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="fl::NoisePalette::fillnoise8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d41/classfl_1_1_noise_palette.html#a22d1820b5a78e9ccfb4123ef9161f738",tooltip=" "];
  Node52 -> Node53 [id="edge36_Node000052_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="fl::NoisePalette::draw",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d9/d41/classfl_1_1_noise_palette.html#afc6cd594830dfdd146c45e7ab1d1905d",tooltip=" "];
  Node1 -> Node55 [id="edge37_Node000001_Node000055",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="Fire2012",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d26/_fire2012_8ino.html#a381ceb87530dc5fee1be3e77d33b3a53",tooltip=" "];
  Node55 -> Node56 [id="edge38_Node000055_Node000056",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="loop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d26/_fire2012_8ino.html#afe461d27b9c48d5921c00d521181f12f",tooltip=" "];
  Node1 -> Node57 [id="edge39_Node000001_Node000057",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="Fire2012WithPalette",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d92/_fire2012_with_palette_8ino.html#af5890ba18cb2066c5a24a358de991a89",tooltip=" "];
  Node57 -> Node58 [id="edge40_Node000057_Node000058",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="loop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d92/_fire2012_with_palette_8ino.html#afe461d27b9c48d5921c00d521181f12f",tooltip=" "];
  Node1 -> Node59 [id="edge41_Node000001_Node000059",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="inoise8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/df9/group___noise_generation.html#gab9d952a5258caa93c05ebdde0140cf0e",tooltip="8-Bit, fixed point implementation of Perlin's noise."];
  Node1 -> Node60 [id="edge42_Node000001_Node000060",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="inoise8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/df9/group___noise_generation.html#ga9641aa87f0a5557f73004fb73f81bba5",tooltip="8-Bit, fixed point implementation of Perlin's noise."];
  Node1 -> Node61 [id="edge43_Node000001_Node000061",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="inoise8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/df9/group___noise_generation.html#gaa521ccca6038d7b5e881fe2e8f35d3bc",tooltip="8-Bit, fixed point implementation of Perlin's noise."];
  Node61 -> Node62 [id="edge44_Node000061_Node000062",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node62 [id="Node000062",label="fill_raw_2dnoise8",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$de/da4/group___noise_fill.html#ga3dc6c55a3f8495a7bc6dc0124434c688",tooltip="Fill a 2D 8-bit buffer with noise, using inoise8()"];
  Node62 -> Node45 [id="edge45_Node000062_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node62 -> Node62 [id="edge46_Node000062_Node000062",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node48 [id="edge47_Node000061_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node51 [id="edge48_Node000061_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node52 [id="edge49_Node000061_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node65 [id="edge50_Node000001_Node000065",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="operator+",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d87/group___pixel_types.html#gaf5b229fba59cb1f39f861960bf8f09ee",tooltip="Add one CRGB to another, saturating at 0xFF for each channel."];
  Node1 -> Node66 [id="edge51_Node000001_Node000066",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node66 [id="Node000066",label="CRGB::operator+=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d87/group___pixel_types.html#a8e3f16f7099319a7770cf333cc9d1111",tooltip="Add one CRGB to another, saturating at 0xFF for each channel."];
  Node1 -> Node67 [id="edge52_Node000001_Node000067",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node67 [id="Node000067",label="fl::Pacifica::pacifica\l_add_whitecaps",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/db2/classfl_1_1_pacifica.html#abbe1bbf6675103bb2857b13cad156aa4",tooltip=" "];
  Node1 -> Node68 [id="edge53_Node000001_Node000068",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node68 [id="Node000068",label="pacifica_add_whitecaps",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d25/_pacifica_8ino.html#a638fb6ae6610fed66077161e7e044f26",tooltip=" "];
  Node68 -> Node69 [id="edge54_Node000068_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="fl::Pacifica::draw",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d2/db2/classfl_1_1_pacifica.html#a264d0c1db5db60028b6fab87af13d700",tooltip=" "];
  Node68 -> Node71 [id="edge55_Node000068_Node000071",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="pacifica_loop",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$dc/d25/_pacifica_8ino.html#a158d427a947ef0a715c7ffd916346acc",tooltip=" "];
  Node1 -> Node73 [id="edge56_Node000001_Node000073",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node73 [id="Node000073",label="rgb2hsv_approximate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dc7/group___h_s_v2_r_g_b.html#gab3d6aa6b1a86a5e9bb820c55c68fe4b9",tooltip="Recover approximate HSV values from RGB."];
  Node1 -> Node74 [id="edge57_Node000001_Node000074",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node74 [id="Node000074",label="wu_water",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d61/_fx_water_8ino.html#a99b8e3f2d300619826b169bc482a2a98",tooltip=" "];
  Node74 -> Node75 [id="edge58_Node000074_Node000075",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node75 [id="Node000075",label="loop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d61/_fx_water_8ino.html#afe461d27b9c48d5921c00d521181f12f",tooltip=" "];
}
